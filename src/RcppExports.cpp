// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// str_extents
NumericMatrix str_extents(CharacterVector x, std::string fontname, int fontsize, int bold, int italic);
RcppExport SEXP gdtools_str_extents(SEXP xSEXP, SEXP fontnameSEXP, SEXP fontsizeSEXP, SEXP boldSEXP, SEXP italicSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< std::string >::type fontname(fontnameSEXP);
    Rcpp::traits::input_parameter< int >::type fontsize(fontsizeSEXP);
    Rcpp::traits::input_parameter< int >::type bold(boldSEXP);
    Rcpp::traits::input_parameter< int >::type italic(italicSEXP);
    __result = Rcpp::wrap(str_extents(x, fontname, fontsize, bold, italic));
    return __result;
END_RCPP
}
// str_metrics
NumericVector str_metrics(std::string x, std::string fontname, int fontsize, int bold, int italic);
RcppExport SEXP gdtools_str_metrics(SEXP xSEXP, SEXP fontnameSEXP, SEXP fontsizeSEXP, SEXP boldSEXP, SEXP italicSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::string >::type x(xSEXP);
    Rcpp::traits::input_parameter< std::string >::type fontname(fontnameSEXP);
    Rcpp::traits::input_parameter< int >::type fontsize(fontsizeSEXP);
    Rcpp::traits::input_parameter< int >::type bold(boldSEXP);
    Rcpp::traits::input_parameter< int >::type italic(italicSEXP);
    __result = Rcpp::wrap(str_metrics(x, fontname, fontsize, bold, italic));
    return __result;
END_RCPP
}
// base64_encode
std::string base64_encode(std::string filename);
RcppExport SEXP gdtools_base64_encode(SEXP filenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    __result = Rcpp::wrap(base64_encode(filename));
    return __result;
END_RCPP
}
// raster_to_png
void raster_to_png(IntegerVector red, IntegerVector green, IntegerVector blue, IntegerVector alpha, int w, int h, double width, double height, int interpolate, std::string filename);
RcppExport SEXP gdtools_raster_to_png(SEXP redSEXP, SEXP greenSEXP, SEXP blueSEXP, SEXP alphaSEXP, SEXP wSEXP, SEXP hSEXP, SEXP widthSEXP, SEXP heightSEXP, SEXP interpolateSEXP, SEXP filenameSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< IntegerVector >::type red(redSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type green(greenSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type blue(blueSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type h(hSEXP);
    Rcpp::traits::input_parameter< double >::type width(widthSEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    Rcpp::traits::input_parameter< int >::type interpolate(interpolateSEXP);
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    raster_to_png(red, green, blue, alpha, w, h, width, height, interpolate, filename);
    return R_NilValue;
END_RCPP
}
